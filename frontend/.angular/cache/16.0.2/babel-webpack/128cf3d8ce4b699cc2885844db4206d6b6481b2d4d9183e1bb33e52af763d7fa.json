{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(foodService, activatedRoute) {\n    this.foodService = foodService;\n    this.foods = [];\n    let foodsObservalbe;\n    activatedRoute.params.subscribe(params => {\n      if (params.searchTerm) foodsObservalbe = this.foodService.getAllFoodsBySearchTerm(params.searchTerm);else if (params.tag) foodsObservalbe = this.foodService.getAllFoodsByTag(params.tag);else foodsObservalbe = foodService.getAll();\n      foodsObservalbe.subscribe(serverFoods => {\n        this.foods = serverFoods;\n      });\n    });\n  }\n  ngOnInit() {}\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","HomeComponent","constructor","foodService","activatedRoute","foods","foodsObservalbe","params","subscribe","searchTerm","getAllFoodsBySearchTerm","tag","getAllFoodsByTag","getAll","serverFoods","ngOnInit","__decorate","selector","templateUrl","styleUrls"],"sources":["G:\\APP\\frontend\\src\\app\\components\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { FoodService } from 'src/app/services/food.service';\nimport { Food } from 'src/app/shared/models/Food';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  foods: Food[] = [];\n  constructor(private foodService: FoodService, activatedRoute: ActivatedRoute) {\n    let foodsObservalbe:Observable<Food[]>;\n    activatedRoute.params.subscribe((params) => {\n      if (params.searchTerm)\n        foodsObservalbe = this.foodService.getAllFoodsBySearchTerm(params.searchTerm);\n      else if (params.tag)\n        foodsObservalbe = this.foodService.getAllFoodsByTag(params.tag);\n      else\n        foodsObservalbe = foodService.getAll();\n\n        foodsObservalbe.subscribe((serverFoods) => {\n          this.foods = serverFoods;\n        })\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAWjD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAGxBC,YAAoBC,WAAwB,EAAEC,cAA8B;IAAxD,KAAAD,WAAW,GAAXA,WAAW;IAD/B,KAAAE,KAAK,GAAW,EAAE;IAEhB,IAAIC,eAAkC;IACtCF,cAAc,CAACG,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACzC,IAAIA,MAAM,CAACE,UAAU,EACnBH,eAAe,GAAG,IAAI,CAACH,WAAW,CAACO,uBAAuB,CAACH,MAAM,CAACE,UAAU,CAAC,CAAC,KAC3E,IAAIF,MAAM,CAACI,GAAG,EACjBL,eAAe,GAAG,IAAI,CAACH,WAAW,CAACS,gBAAgB,CAACL,MAAM,CAACI,GAAG,CAAC,CAAC,KAEhEL,eAAe,GAAGH,WAAW,CAACU,MAAM,EAAE;MAEtCP,eAAe,CAACE,SAAS,CAAEM,WAAW,IAAI;QACxC,IAAI,CAACT,KAAK,GAAGS,WAAW;MAC1B,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA,GACR;CAED;AAtBYd,aAAa,GAAAe,UAAA,EALzBhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWlB,aAAa,CAsBzB;SAtBYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}